---
- name: Set correct automatic update utility vars (RHEL 8).
  ansible.builtin.set_fact:
    update_utility: dnf-automatic
    update_service: dnf-automatic-install.timer
    update_conf_path: /etc/dnf/automatic.conf
  when: ansible_distribution_major_version | int == 8

- name: Set correct automatic update utility vars (RHEL <= 7).
  ansible.builtin.set_fact:
    update_utility: yum-cron
    update_service: yum-cron
    update_conf_path: /etc/yum/yum-cron.conf
  when: ansible_distribution_major_version | int <= 7

- name: Install automatic update utility.
  ansible.builtin.package:
    name: '{{ update_utility }}'
    state: present

- name: Ensure automatic update utility is running and enabled on boot.
  ansible.builtin.service:
    name: '{{ update_service }}'
    state: started
    enabled: true

- name: Enable autoupdates.
  ansible.builtin.lineinfile:
    dest: '{{ update_conf_path }}'
    regexp: '^apply_updates = .+'
    line: 'apply_updates = yes'
    mode: 0644
  when:
    - security_autoupdate_enabled
    - ansible_distribution_major_version | int in [7, 8]

- name: Set automatic update type to security updates only.
  ansible.builtin.lineinfile:
    dest: '{{ update_conf_path }}'
    regexp: '^update_cmd = .+'
    line: 'update_cmd = security'
    mode: 0644
  when:
    - security_autoupdate_enabled
    - security_autoupdate_secpkgs_only
    - ansible_distribution_major_version | int in [7, 8]

- name: Set automatic update blacklist.
  ansible.builtin.lineinfile:
    dest: '{{ update_conf_path }}'
    insertafter: '[base]'
    line: 'exclude = {{ security_autoupdate_blacklist | join(" ") }}'
    mode: 0644
  when:
    - security_autoupdate_enabled
    - security_autoupdate_blacklist
    - ansible_distribution_major_version | int in [7, 8]
